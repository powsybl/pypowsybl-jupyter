name: Full CI

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*.*.*'    

jobs:
  build:
    name: Build wheel
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-3.12-${{ hashFiles('package.json') }}
          restore-keys: |
            pip-3.12-
            pip-

      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
          
      - name: Build wheel
        run: |
          python -m pip install build
          python -m build --wheel

      - name: Install wheel
        run: pip3 install dist/*.whl --user

      - name: Dev install  # Install in sources in order to do checkings like linting
        run: |
          pip3 uninstall -y pypowsybl_jupyter
          python -m pip install --upgrade -v -e ".[dev]"
          npm run lint

      - name: Upload wheel
        uses: actions/upload-artifact@v3
        with:
          name: pypowsybl_jupyter-wheel
          path: dist/*.whl

  package:
    name: Package wheels
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v3
        with:
          path: download

      - name: Release on PyPi (fake test)
        if: startsWith(github.ref, 'refs/tags/')
        shell: bash
        run: |
          ls -R download
